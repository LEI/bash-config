#!/usr/bin/env bash

# Usage: source bootstrap

# BOOTSTRAP="$(dirname "${BASH_SOURCE}")"
# BOOTSTRAP="$(cd "$(dirname "$0")"; pwd -P)"
BOOTSTRAP="${BOOTSTRAP:-$HOME/storage/shared/termux-config}"

log() {
  # printf "%s" "${0##*/}: "
  printf "%s\n" "$@"
}

err() {
  local ret=$?
  >&2 log "$@"
  return $ret
}

has() {
  if ! hash "$1" 2>/dev/null
  then err "$1: command not found"
    return 127
  fi
}

# Stow
symlink() {
  local path="${1:-$BOOTSTRAP}"
  local target="${2:-$HOME}"

  # local d
  # for d in {.vim,.tmux}
  # do d="$TARGET/$d"
  #   [[ -d "$d" ]] || mkdir "$d"
  # done

  if [[ -d "$path/os_$OS" ]]
  then path+=" $path/os_$OS"
  fi

  local d
  for d in $(find $path -type d \
    ! -name '.git' ! -name 'os_*' \
    -mindepth 1 -maxdepth 1)
  do local pkg="$(basename $d)"
    log "Installing $pkg..."
    [[ -f  "$d/install.sh" ]] && source "$d/install.sh"
    stow --verbose --ignore=".*.tpl" --ignore="install.sh" \
      --dir "$(dirname $d)" --target \
      "$target" "$pkg"
  done
}

template() {
  local cmd="sed"
  local src="$1"
  shift
  local dst="$1" # ${1:-$HOME/$(basename "${1%.tpl}")}
  shift
  if [[ ! -f "$src" ]] && [[ ! -L "$src" ]]
  then err "$src: not found"
    return 1
  fi
  if [[ -f "$dst" ]] || [[ -L "$dst" ]]
  # TODO check symlink target
  then err "${dst/$HOME/\~}: already exists"
    return
  fi
  local var v
  for var in "$@"
  do v="TPL_${var%%:*}"
    declare $v=
    while [[ -z "${!v}" ]]
    do log "${var#*:}"; read -e "$v"
    done
    cmd+=" -e \"s/${var%%:*}/${!v}/g\""
  done

  eval $cmd "$src" > "$dst"
}

main() {
  case "$(uname -o 2>/dev/null)" in
    Android) OS="android" ;;
    *) OS="$(uname -s | to lower)" ;;
  esac

  case "$OS" in
    android) has apt && apt update -qq -y && apt install -y \
      busybox ca-certificates coreutils curl less man openssh openssl readline stow tree ;;
    # darwin) has brew || brew_install && brew update && brew install ... ;;
    # linux) ;;
  esac

  if has stow
  then symlink
  fi

  log "Done."
}

main "$@"

unset log
unset err
unset has
unset symlink
unset template
unset main
