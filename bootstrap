#!/usr/bin/env bash

# Usage: source bootstrap

TERMUX_CFG="$HOME/storage/shared/termux-config"

# Install packages
apt_packages() {
  local pkg="${1:-$TERMUX_CFG/apt}"

  if [[ -r "$pkg" ]]
  then pkg="$(cat "$pkg")"
  else >&2 printf "%s\n" "$pkg: not found"
    return 1
  fi

  apt update && apt install $pkg
}

# Symlink dotfiles
stow_packages() {
  local dir="${1:-$TERMUX_CFG}"
  local target="${2:-$HOME}"
  local pkg ignore_dirs=""

  # local d
  # for d in {.vim,.tmux}
  # do d="$TARGET/$d"
  #   [[ -d "$d" ]] || mkdir "$d"
  # done

  local d dirs="$(find "$dir" -type d -mindepth 1 -maxdepth 1)"
  for d in $dirs
  do pkg="$(basename $d)"
    [[ "$ignore_dirs" == *"$pkg"* ]] && continue
    printf "%s\n" "Stowing $pkg..."
    stow --verbose --dir "$dir" --target "$target" "$pkg" --ignore=".*.tpl"
  done
}

git_install() {
  local tpl="${1:-$TERMUX_CFG/git/.gitconfig.local.tpl}"
  if [[ ! -f "$tpl" ]] && [[ ! -L "$tpl" ]]
  then >&2 printf "%s\n" "$tpl: not found"
    return 1
  fi
  local dst="${2:-$HOME}/.gitconfig.local"
  if [[ -f "$dst" ]] || [[ -L "$dst" ]]
  then >&2 printf "%s\n" "${dst/$HOME/\~}: already exists"
    return
  fi
  local git_name git_user git_email
  printf "%s\n" "What is your github full name?"
  read -e git_name
  printf "%s\n" "What is your github username?"
  read -e git_user
  printf "%s\n" "What is your github email?"
  read -e git_email
  sed -e "s/GIT_NAME/$git_name/g" \
    -e "s/GIT_USERNAME/$git_username/g" \
    -e "s/GIT_EMAIL/$git_email/g" \
    "$tpl" > "$dst"
}

main() {
  if hash apt 2>/dev/null
  then apt_packages
  fi

  if hash stow 2>/dev/null
  then stow_packages
  fi

  if hash git 2>/dev/null
  then git_install
  fi

  printf "%s\n" "Done."
}

main "$@"

unset apt_packages
unset stow_packages
unset main
